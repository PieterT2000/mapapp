{"version":3,"sources":["styles/icons/happiness.svg","Components/Spinner.jsx","Components/TypeAhead.jsx","Components/SideBar.jsx","Components/MapWrapper.jsx","App.js","index.js"],"names":["_g","_g2","_g3","_g4","_g5","_g6","_g7","_g8","_g9","_g10","_g11","_g12","_g13","_g14","_g15","_g16","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgHappiness","_ref","svgRef","title","titleId","props","fill","id","xmlns","xmlnsXlink","x","y","viewBox","style","enableBackground","xmlSpace","ref","d","cx","cy","r","ForwardRef","Spinner","complete","className","hidden","TypeAhead","submitHandler","places","renderComplete","useState","matches","setMatches","selected","setSelected","spinner","setSpinner","input","setInput","selectedIndex","setSelectedIndex","originalInput","setOriginalInput","useEffect","handleSelection","placeName","boldSearchTerm","string","term_length","toBold","substring","restOfString","onSubmit","e","preventDefault","autoComplete","placeholder","onChange","val","value","placeMatches","filter","place","regex","RegExp","trim","match","slice","handleInput","onKeyDown","includes","select","handleKeypress","type","onClick","parentElement","textContent","handleClick","map","SideBar","setPlaces","a","fetch","window","location","href","res","text","placesArr","split","fetchPlaces","MapWrapper","renderCompleteListener","features","setMap","featuresLayer","setFeaturesLayer","mapElement","useRef","proj4","defs","register","dutchProjection","getProjection","vectorSource","VectorSource","format","GeoJSON","url","vector","VectorLayer","Style","stroke","Stroke","color","width","Fill","mousePositionControl","MousePosition","coordinateFormat","createStringXY","undefinedHTML","initialMap","Map","current","layers","TileLayer","OSM","view","View","projection","center","zoom","controls","defaultControls","extend","on","un","setSource","extent","values_","geometry","extent_","getView","fit","padding","App","setFeatures","setRenderComplete","api","filterStr","encodeURIComponent","then","json","fetchedFeatures","parsedFeatures","readFeatures","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f41fe549.chunk.js","sourcesContent":["var _g, _g2, _g3, _g4, _g5, _g6, _g7, _g8, _g9, _g10, _g11, _g12, _g13, _g14, _g15, _g16;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgHappiness(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    fill: \"#fdfdfe\",\n    id: \"Capa_1\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    x: \"0px\",\n    y: \"0px\",\n    viewBox: \"0 0 295.996 295.996\",\n    style: {\n      enableBackground: \"new 0 0 295.996 295.996\"\n    },\n    xmlSpace: \"preserve\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _g || (_g = /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M147.998,0C66.392,0,0,66.392,0,147.998s66.392,147.998,147.998,147.998s147.998-66.392,147.998-147.998 S229.605,0,147.998,0z M147.998,279.996c-36.256,0-69.143-14.696-93.022-38.44c-9.536-9.482-17.631-20.41-23.934-32.42 C21.442,190.847,16,170.047,16,147.998C16,75.214,75.214,16,147.998,16c34.523,0,65.987,13.328,89.533,35.102 c12.208,11.288,22.289,24.844,29.558,39.996c8.27,17.239,12.907,36.538,12.907,56.9 C279.996,220.782,220.782,279.996,147.998,279.996z\"\n  }), /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 99.666,\n    cy: 114.998,\n    r: 16\n  }), /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 198.666,\n    cy: 114.998,\n    r: 16\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M147.715,229.995c30.954,0,60.619-15.83,77.604-42.113l-13.439-8.684c-15.597,24.135-44.126,37.604-72.693,34.308 c-22.262-2.567-42.849-15.393-55.072-34.308l-13.438,8.684c14.79,22.889,39.716,38.409,66.676,41.519 C140.814,229.8,144.27,229.995,147.715,229.995z\"\n  }))), _g2 || (_g2 = /*#__PURE__*/React.createElement(\"g\", null)), _g3 || (_g3 = /*#__PURE__*/React.createElement(\"g\", null)), _g4 || (_g4 = /*#__PURE__*/React.createElement(\"g\", null)), _g5 || (_g5 = /*#__PURE__*/React.createElement(\"g\", null)), _g6 || (_g6 = /*#__PURE__*/React.createElement(\"g\", null)), _g7 || (_g7 = /*#__PURE__*/React.createElement(\"g\", null)), _g8 || (_g8 = /*#__PURE__*/React.createElement(\"g\", null)), _g9 || (_g9 = /*#__PURE__*/React.createElement(\"g\", null)), _g10 || (_g10 = /*#__PURE__*/React.createElement(\"g\", null)), _g11 || (_g11 = /*#__PURE__*/React.createElement(\"g\", null)), _g12 || (_g12 = /*#__PURE__*/React.createElement(\"g\", null)), _g13 || (_g13 = /*#__PURE__*/React.createElement(\"g\", null)), _g14 || (_g14 = /*#__PURE__*/React.createElement(\"g\", null)), _g15 || (_g15 = /*#__PURE__*/React.createElement(\"g\", null)), _g16 || (_g16 = /*#__PURE__*/React.createElement(\"g\", null)));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgHappiness);\nexport default __webpack_public_path__ + \"static/media/happiness.9f94d3ef.svg\";\nexport { ForwardRef as ReactComponent };","import \"./../styles/spinner.scss\";\nimport React from \"react\";\n\nconst Spinner = ({ complete }) => {\n  return (\n    <div className=\"wrapper\">\n      <div hidden={complete} className=\"spinner\">\n        Spinning...\n      </div>\n    </div>\n  );\n};\n\nexport default Spinner;\n","import \"./../styles/typeahead.scss\";\n\nimport React, { useState, useEffect } from \"react\";\nimport Spinner from \"./Spinner\";\n\nconst TypeAhead = ({ submitHandler, places, renderComplete }) => {\n  const [matches, setMatches] = useState([]);\n  const [selected, setSelected] = useState(false);\n  const [spinner, setSpinner] = useState(false);\n  const [input, setInput] = useState(\"\");\n  // A -1 value for selectedIndex means no keyboard navigation has been used yet\n  const [selectedIndex, setSelectedIndex] = useState(-1);\n  // Holds original user's input when they make use of keyboard selection\n  const [originalInput, setOriginalInput] = useState(\"\");\n\n  /* This makes sure are spinner doesn't keep spinning forever once the map is gloriously loaded! */\n  useEffect(() => {\n    if (renderComplete) setSpinner(false);\n  }, [renderComplete]);\n\n  /**\n   * Loads Suggestions based on user input\n   * Triggered by: Change event on input text field\n   * Effects: changes suggestions\n   */\n  const handleInput = (e) => {\n    let val = e.target.value;\n    setInput(val);\n\n    // In case of empty values, we can't have any matches\n    if (val === \"\") return setMatches([]);\n\n    // No selection as soon as user edits placename after selection\n    if (selected) setSelected(false);\n\n    // Filter places where search term matches placenames (starting from beginning)\n    const placeMatches = places\n      .filter((place) => {\n        const regex = new RegExp(`^${val.trim()}`, \"gi\");\n        return place.match(regex);\n      })\n      .slice(0, 9); // We're only interested in top 9 matches\n    setMatches(placeMatches);\n  };\n\n  // To be used both by click and 'Enter' events\n  const handleSelection = (placeName) => {\n    // Remove suggestions after selection\n    setMatches([]);\n    // Apply styles for selected state\n    setSelected(true);\n    // Call Submit handler from here with selected place -> loads new Vector Source\n    submitHandler(placeName);\n    // Start showing spinner till render of map is complete\n    setSpinner(true);\n  };\n\n  /**\n   * Triggered by: Click event on list of suggestions\n   * Effects: Initiate fetching of new vector source\n   */\n  const handleClick = ({ target }) => {\n    if (!target.matches(\"li\") && !target.matches(\"strong\")) return;\n\n    // In case target is <strong> element, get content of parent <li>\n    const placeName = target.matches(\"strong\")\n      ? target.parentElement.textContent.trim()\n      : target.textContent.trim();\n    // Put selection in text input field\n    setInput(placeName);\n    handleSelection(placeName);\n  };\n\n  /**\n   * Accessibility for keyboard users\n   * Triggered by: Keypress event on input text field\n   * Effects: Navigating through matches\n   */\n  const handleKeypress = (e) => {\n    if (![\"ArrowDown\", \"ArrowUp\", \"Enter\"].includes(e.key)) return;\n    const length = matches.length;\n    // Don't respond to keyboard events in case of 0 matches or empty input\n    if (!length || !input) return;\n\n    const select = (i) => {\n      // At first keyboard navigation event, save original input\n      if (!originalInput) setOriginalInput(input);\n      // Set Index for highlighting\n      setSelectedIndex(i);\n      // Set text input field to highlighted match\n      setInput(matches[i]);\n    };\n\n    const restore = () => {\n      setSelectedIndex(-1);\n      setInput(originalInput);\n      setOriginalInput(\"\");\n    };\n\n    if (e.key === \"ArrowDown\") {\n      if (selectedIndex >= length - 1) return;\n      // If we haven't reached the end yet, increment index by 1\n      select(selectedIndex + 1);\n    } else if (e.key === \"ArrowUp\") {\n      // Prevent Cursor from going back to index 0 in input field\n      e.preventDefault();\n      if (selectedIndex === -1) return select(length - 1);\n      // Restore original user's text input if they navigate higher than index 0\n      if (selectedIndex <= 0) return restore();\n      select(selectedIndex - 1);\n    } else {\n      // In case Enter has been pressed\n      handleSelection(matches[selectedIndex]);\n      // Clean up\n      setOriginalInput(\"\");\n      setSelectedIndex(-1);\n    }\n  };\n\n  const boldSearchTerm = (string) => {\n    // We don't want to update the bold substring whenever we navigate through the matches by keyboard\n    let term_length = 0;\n    // If selectedIndex is less than zero, keyboard navigation hasn't been used yet.\n    if (selectedIndex < 0) term_length = input.length;\n    else term_length = originalInput.length;\n\n    const toBold = string.substring(0, term_length);\n    const restOfString = string.substring(term_length);\n    return (\n      <>\n        <strong> {toBold}</strong>\n        {restOfString}\n      </>\n    );\n  };\n\n  return (\n    <form onSubmit={(e) => e.preventDefault()} autoComplete=\"off\">\n      <div className=\"typeahead\">\n        <div className=\"upper\">\n          <div className={`input-wrapper ${selected && \"selected\"}`}>\n            <input\n              placeholder={\"e.g. Cyclo Town\"}\n              onChange={(e) => handleInput(e)}\n              onKeyDown={(e) => handleKeypress(e)}\n              type=\"text\"\n              value={input}\n              className={input && \"active\"}\n            />\n          </div>\n        </div>\n        <div className=\"lower\">\n          <Spinner complete={!spinner} />\n          <ul\n            onClick={(e) => handleClick(e)}\n            className=\"suggestions\"\n            hidden={!matches.length}\n          >\n            {matches.map((match, i) => (\n              <li\n                className={\n                  selectedIndex >= 0 && matches[selectedIndex] === match\n                    ? \"kb-selected\"\n                    : \"\"\n                }\n                key={`${i}${match}`}\n              >\n                {boldSearchTerm(match)}\n              </li>\n            ))}\n          </ul>\n        </div>\n      </div>\n    </form>\n  );\n};\n\nexport default TypeAhead;\n","import \"../styles/sidebar.scss\";\nimport { ReactComponent as Smiley } from \"../styles/icons/happiness.svg\";\n\nimport React, { useEffect, useState } from \"react\";\nimport TypeAhead from \"./TypeAhead\";\n\nconst SideBar = ({ submitHandler, renderComplete }) => {\n  const [places, setPlaces] = useState([]);\n\n  // Loads places on first render asynchrounsly and passed them as a prop to TypeAhead\n  useEffect(() => {\n    async function fetchPlaces() {\n      // Use absolute URL path as places.txt is placed in public folder\n      const res = await fetch(window.location.href + \"/places.txt\");\n      const places = await res.text();\n      const placesArr = places.split(\"\\n\");\n      setPlaces(placesArr);\n    }\n    fetchPlaces();\n  }, []);\n\n  return (\n    <div className=\"sidebar\">\n      <div className=\"header\">\n        <h2>🗺️ Lie of the land</h2>\n        <p>\n          By typing in your placename, you can check out your town's/city's\n          borders so you always know how far to go. {<Smiley />}\n        </p>\n      </div>\n      <TypeAhead\n        renderComplete={renderComplete}\n        submitHandler={submitHandler}\n        places={places}\n      />\n    </div>\n  );\n};\n\nexport default SideBar;\n","import React, { useState, useEffect, useRef } from \"react\";\nimport { Map, View } from \"ol\";\nimport TileLayer from \"ol/layer/Tile\";\nimport OSM from \"ol/source/OSM\";\nimport VectorSource from \"ol/source/Vector\";\nimport VectorLayer from \"ol/layer/Vector\";\nimport { Stroke, Fill, Style } from \"ol/style\";\nimport { GeoJSON } from \"ol/format\";\nimport proj4 from \"proj4\";\nimport { register } from \"ol/proj/proj4\";\nimport { get as getProjection } from \"ol/proj\";\nimport { defaults as defaultControls } from \"ol/control\";\nimport MousePosition from \"ol/control/MousePosition\";\nimport { createStringXY } from \"ol/coordinate\";\n\nconst MapWrapper = ({ renderCompleteListener, features }) => {\n  const [map, setMap] = useState();\n  const [featuresLayer, setFeaturesLayer] = useState(null);\n\n  // Stores reference to element into which map should render\n  const mapElement = useRef();\n\n  // Initialises map on first render\n  useEffect(() => {\n    // Set Dutch projection definition that is to be used by the OSM baselayer\n    proj4.defs(\n      \"EPSG:28992\",\n      \"+proj=sterea +lat_0=52.15616055555555 +lon_0=5.38763888888889 +k=0.9999079 +x_0=155000 +y_0=463000 +ellps=bessel +units=m +no_defs\"\n    );\n    register(proj4);\n    const dutchProjection = getProjection(\"EPSG:28992\");\n\n    // Initial Vector source -> Bommelerwaard Woonplaatsen\n    const vectorSource = new VectorSource({\n      format: new GeoJSON(),\n      url:\n        \"https://geodata.nationaalgeoregister.nl/bag/wfs/v1_1?service=WFS&version=2.0.0&request=GetFeature&typename=bag:woonplaats&outputFormat=json&bbox=135182.04,421669.31,140942.71,425358.39\",\n    });\n\n    const vector = new VectorLayer({\n      source: vectorSource,\n      style: new Style({\n        stroke: new Stroke({\n          color: \"#282b9d\",\n          width: 2,\n        }),\n        fill: new Fill({\n          color: \"rgba(40, 43, 197, 0.45)\",\n        }),\n      }),\n    });\n\n    const mousePositionControl = new MousePosition({\n      coordinateFormat: createStringXY(1),\n      undefinedHTML: \"XY Coordinates\",\n    });\n\n    const initialMap = new Map({\n      target: mapElement.current,\n      // set Open Street map as base map\n      layers: [\n        new TileLayer({\n          source: new OSM(),\n        }),\n        vector,\n      ],\n      view: new View({\n        projection: dutchProjection,\n        // Take Hilversum as center\n        center: [142892.19, 470783.87],\n        zoom: 9,\n      }),\n      controls: defaultControls().extend([mousePositionControl]),\n    });\n\n    // Register evt listener for spinner when we update vector layer using user input\n    initialMap.on(\"rendercomplete\", renderCompleteListener);\n\n    setMap(initialMap);\n    // Save features to state so we can later edit the vector source if props.features changes\n    setFeaturesLayer(vector);\n\n    // Clean up event listeners\n    return () => initialMap.un(\"rendercomplete\", renderCompleteListener);\n  }, []);\n\n  // Update map directly whenever a new vector layer is passed down the props\n  useEffect(() => {\n    // On first render or in case the API returns nothing, features will be an empty array\n    if (features.length) {\n      featuresLayer.setSource(\n        new VectorSource({\n          features,\n        })\n      );\n\n      // Zoom in on the first instance of the selected place\n      const extent = features[0].values_.geometry.extent_;\n      map.getView().fit(extent, {\n        padding: [150, 150, 150, 150],\n      });\n    }\n  }, [features]);\n\n  return <div ref={mapElement} className=\"map-container\"></div>;\n};\n\nexport default MapWrapper;\n","import \"ol/ol.css\";\nimport \"./styles/app.scss\";\nimport React, { useState } from \"react\";\n\nimport SideBar from \"./Components/SideBar\";\nimport MapWrapper from \"./Components/MapWrapper\";\nimport { GeoJSON } from \"ol/format\";\n\nfunction App() {\n  const [features, setFeatures] = useState(\"\");\n  const [renderComplete, setRenderComplete] = useState();\n\n  let api =\n    \"https://geodata.nationaalgeoregister.nl/bag/wfs/v1_1?service=WFS&version=2.0.0&request=GetFeature&typename=bag:woonplaats&count=5&outputFormat=json&count-5\";\n\n  /**\n   * Loads a new vector source, once user has selected a new placename to show\n   * Triggered by: Selection of placename from suggestions\n   * Notifies: MapWrapper -> should render a new vector\n   */\n  const handleSubmit = (placeName) => {\n    if (!placeName) return;\n\n    const queryParam = \"&filter=\";\n    const filterStr = `<Filter><PropertyIsEqualTo><PropertyName>bag:woonplaats</PropertyName><Literal>${placeName}</Literal></PropertyIsEqualTo></Filter>`;\n    api += queryParam + encodeURIComponent(filterStr);\n\n    fetch(api)\n      .then((res) => res.json())\n      .then((fetchedFeatures) => {\n        // Parse Features from returned JSON object\n        const parsedFeatures = new GeoJSON().readFeatures(fetchedFeatures);\n        setFeatures(parsedFeatures);\n\n        // Start spinning\n        setRenderComplete(false);\n      });\n  };\n\n  return (\n    <div className=\"App\">\n      <SideBar renderComplete={renderComplete} submitHandler={handleSubmit} />\n      <MapWrapper\n        renderCompleteListener={() => setRenderComplete(true)}\n        features={features}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}